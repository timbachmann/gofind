/**
 * Cineast RESTful API
 * Cineast is vitrivr's content-based multimedia retrieval engine. This is it's RESTful API.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@vitrivr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class QueryConfig {
  
  @SerializedName("queryId")
  private UUID queryId = null;
  public enum HintsEnum {
     exact,  inexact,  lsh,  ecp,  mi,  pq,  sh,  va,  vaf,  vav,  sequential,  empirical,
  };
  @SerializedName("hints")
  private Set<HintsEnum> hints = null;
  public enum DistanceEnum {
     chisquared,  correlation,  cosine,  hamming,  jaccard,  kullbackleibler,  chebyshev,  euclidean,  squaredeuclidean,  manhattan,  minkowski,  spannorm,  haversine, 
  };
  @SerializedName("distance")
  private DistanceEnum distance = null;
  @SerializedName("distanceWeights")
  private List<Float> distanceWeights = null;
  @SerializedName("norm")
  private Float norm = null;
  @SerializedName("resultsPerModule")
  private Integer resultsPerModule = null;
  @SerializedName("maxResults")
  private Integer maxResults = null;
  @SerializedName("relevantSegmentIds")
  private Set<String> relevantSegmentIds = null;
  @SerializedName("correspondenceFunctionIfEmpty")
  private QueryConfig correspondenceFunctionIfEmpty = null;
  @SerializedName("distanceIfEmpty")
  private QueryConfig distanceIfEmpty = null;
  @SerializedName("normIfEmpty")
  private QueryConfig normIfEmpty = null;
  @SerializedName("distanceWeightsIfEmpty")
  private QueryConfig distanceWeightsIfEmpty = null;
  @SerializedName("correspondenceFunction")
  private Object correspondenceFunction = null;
  @SerializedName("rawResultsPerModule")
  private Integer rawResultsPerModule = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public UUID getQueryId() {
    return queryId;
  }
  public void setQueryId(UUID queryId) {
    this.queryId = queryId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Set<HintsEnum> getHints() {
    return hints;
  }
  public void setHints(Set<HintsEnum> hints) {
    this.hints = hints;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DistanceEnum getDistance() {
    return distance;
  }
  public void setDistance(DistanceEnum distance) {
    this.distance = distance;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Float> getDistanceWeights() {
    return distanceWeights;
  }
  public void setDistanceWeights(List<Float> distanceWeights) {
    this.distanceWeights = distanceWeights;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Float getNorm() {
    return norm;
  }
  public void setNorm(Float norm) {
    this.norm = norm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getResultsPerModule() {
    return resultsPerModule;
  }
  public void setResultsPerModule(Integer resultsPerModule) {
    this.resultsPerModule = resultsPerModule;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getMaxResults() {
    return maxResults;
  }
  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Set<String> getRelevantSegmentIds() {
    return relevantSegmentIds;
  }
  public void setRelevantSegmentIds(Set<String> relevantSegmentIds) {
    this.relevantSegmentIds = relevantSegmentIds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QueryConfig getCorrespondenceFunctionIfEmpty() {
    return correspondenceFunctionIfEmpty;
  }
  public void setCorrespondenceFunctionIfEmpty(QueryConfig correspondenceFunctionIfEmpty) {
    this.correspondenceFunctionIfEmpty = correspondenceFunctionIfEmpty;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QueryConfig getDistanceIfEmpty() {
    return distanceIfEmpty;
  }
  public void setDistanceIfEmpty(QueryConfig distanceIfEmpty) {
    this.distanceIfEmpty = distanceIfEmpty;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QueryConfig getNormIfEmpty() {
    return normIfEmpty;
  }
  public void setNormIfEmpty(QueryConfig normIfEmpty) {
    this.normIfEmpty = normIfEmpty;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public QueryConfig getDistanceWeightsIfEmpty() {
    return distanceWeightsIfEmpty;
  }
  public void setDistanceWeightsIfEmpty(QueryConfig distanceWeightsIfEmpty) {
    this.distanceWeightsIfEmpty = distanceWeightsIfEmpty;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCorrespondenceFunction() {
    return correspondenceFunction;
  }
  public void setCorrespondenceFunction(Object correspondenceFunction) {
    this.correspondenceFunction = correspondenceFunction;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getRawResultsPerModule() {
    return rawResultsPerModule;
  }
  public void setRawResultsPerModule(Integer rawResultsPerModule) {
    this.rawResultsPerModule = rawResultsPerModule;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryConfig queryConfig = (QueryConfig) o;
    return (this.queryId == null ? queryConfig.queryId == null : this.queryId.equals(queryConfig.queryId)) &&
        (this.hints == null ? queryConfig.hints == null : this.hints.equals(queryConfig.hints)) &&
        (this.distance == null ? queryConfig.distance == null : this.distance.equals(queryConfig.distance)) &&
        (this.distanceWeights == null ? queryConfig.distanceWeights == null : this.distanceWeights.equals(queryConfig.distanceWeights)) &&
        (this.norm == null ? queryConfig.norm == null : this.norm.equals(queryConfig.norm)) &&
        (this.resultsPerModule == null ? queryConfig.resultsPerModule == null : this.resultsPerModule.equals(queryConfig.resultsPerModule)) &&
        (this.maxResults == null ? queryConfig.maxResults == null : this.maxResults.equals(queryConfig.maxResults)) &&
        (this.relevantSegmentIds == null ? queryConfig.relevantSegmentIds == null : this.relevantSegmentIds.equals(queryConfig.relevantSegmentIds)) &&
        (this.correspondenceFunctionIfEmpty == null ? queryConfig.correspondenceFunctionIfEmpty == null : this.correspondenceFunctionIfEmpty.equals(queryConfig.correspondenceFunctionIfEmpty)) &&
        (this.distanceIfEmpty == null ? queryConfig.distanceIfEmpty == null : this.distanceIfEmpty.equals(queryConfig.distanceIfEmpty)) &&
        (this.normIfEmpty == null ? queryConfig.normIfEmpty == null : this.normIfEmpty.equals(queryConfig.normIfEmpty)) &&
        (this.distanceWeightsIfEmpty == null ? queryConfig.distanceWeightsIfEmpty == null : this.distanceWeightsIfEmpty.equals(queryConfig.distanceWeightsIfEmpty)) &&
        (this.correspondenceFunction == null ? queryConfig.correspondenceFunction == null : this.correspondenceFunction.equals(queryConfig.correspondenceFunction)) &&
        (this.rawResultsPerModule == null ? queryConfig.rawResultsPerModule == null : this.rawResultsPerModule.equals(queryConfig.rawResultsPerModule));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.queryId == null ? 0: this.queryId.hashCode());
    result = 31 * result + (this.hints == null ? 0: this.hints.hashCode());
    result = 31 * result + (this.distance == null ? 0: this.distance.hashCode());
    result = 31 * result + (this.distanceWeights == null ? 0: this.distanceWeights.hashCode());
    result = 31 * result + (this.norm == null ? 0: this.norm.hashCode());
    result = 31 * result + (this.resultsPerModule == null ? 0: this.resultsPerModule.hashCode());
    result = 31 * result + (this.maxResults == null ? 0: this.maxResults.hashCode());
    result = 31 * result + (this.relevantSegmentIds == null ? 0: this.relevantSegmentIds.hashCode());
    result = 31 * result + (this.correspondenceFunctionIfEmpty == null ? 0: this.correspondenceFunctionIfEmpty.hashCode());
    result = 31 * result + (this.distanceIfEmpty == null ? 0: this.distanceIfEmpty.hashCode());
    result = 31 * result + (this.normIfEmpty == null ? 0: this.normIfEmpty.hashCode());
    result = 31 * result + (this.distanceWeightsIfEmpty == null ? 0: this.distanceWeightsIfEmpty.hashCode());
    result = 31 * result + (this.correspondenceFunction == null ? 0: this.correspondenceFunction.hashCode());
    result = 31 * result + (this.rawResultsPerModule == null ? 0: this.rawResultsPerModule.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryConfig {\n");
    
    sb.append("  queryId: ").append(queryId).append("\n");
    sb.append("  hints: ").append(hints).append("\n");
    sb.append("  distance: ").append(distance).append("\n");
    sb.append("  distanceWeights: ").append(distanceWeights).append("\n");
    sb.append("  norm: ").append(norm).append("\n");
    sb.append("  resultsPerModule: ").append(resultsPerModule).append("\n");
    sb.append("  maxResults: ").append(maxResults).append("\n");
    sb.append("  relevantSegmentIds: ").append(relevantSegmentIds).append("\n");
    sb.append("  correspondenceFunctionIfEmpty: ").append(correspondenceFunctionIfEmpty).append("\n");
    sb.append("  distanceIfEmpty: ").append(distanceIfEmpty).append("\n");
    sb.append("  normIfEmpty: ").append(normIfEmpty).append("\n");
    sb.append("  distanceWeightsIfEmpty: ").append(distanceWeightsIfEmpty).append("\n");
    sb.append("  correspondenceFunction: ").append(correspondenceFunction).append("\n");
    sb.append("  rawResultsPerModule: ").append(rawResultsPerModule).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
